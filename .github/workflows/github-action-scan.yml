# SPDX-License-Identifier: MIT
name: Build SecHub GHA (scan)

on:
  push:
    branches:
      - 'gha_*'

jobs:
  build-scan:
    runs-on: ubuntu-latest
    # Let's set the scan action folder as the working directory for all "run" steps:
    
    defaults:
      run:
        working-directory: ./github-actions/scan
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      
      - name: Use Node.js
        # We do not define a dedicated node version here, we just use the default environment
        # which should be the default environment for the github actions runtime as well
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65
    
      - name: Set up JDK 17
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          java-version: 17
          distribution: temurin

      - name: Clean install
        run: npm ci 
        
      - name: Build
        run: npm run build --if-present
        
      - name: Run unit tests
        run: npm test

      - name: Setup integration test data
        id : version-selector
        run: |
          echo "sechub_server_version=1.4.1" >> "$GITHUB_ENV"
          echo "sechub_server_port=8443" >> "$GITHUB_ENV"
          echo "pds_version=1.4.0" >> "$GITHUB_ENV"
          echo "pds_port=8444" >> "$GITHUB_ENV"

      - name: Cache SecHub server download    
        # Cache V4 release: 13aacd865c20de90d75de3b17ebe84f7a17d57d2
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 
        with:
          path: ./build/sechub-runtime/server/${{ steps.version-selector.outputs.sechub_server_version }}/
          key: ${{ runner.os }}-sechub-server-${{ steps.version-selector.outputs.sechub_server_version }}
       
      - name: Cache PDS download    
        # Cache V4 release: 13aacd865c20de90d75de3b17ebe84f7a17d57d2
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 
        with:
          path: ./build/sechub-runtime/pds/${{ steps.version-selector.outputs.pds_version }}/
          key: ${{ runner.os }}-pds-${{ steps.version-selector.outputs.pds_version }}

      - name: Start integration test servers
        run:  ./__test__/integrationtest/01-start.sh $sechub_server_version $sechub_server_port $pds_version $pds_port
        
      - name: Init integration test data
        working-directory: ./github-actions/scan
        run:  ./__test__/integrationtest/03-init_sechub_data $sechub_server_port $pds_version

      - name: Run integration tests
        working-directory: ./github-actions/scan
        run: npm run integration-test
        
      - name: Cleanup integration tests
        run:  ./__test__/integrationtest/05-stop.sh 8443 8444

      # ------------------------------------ archive -----------------------
      - name: Archive report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sechub-report
          path: sechub-report*.json
          retention-days: 14
      - name: Archive server log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sechub-server.log
          path: ./build/sechub-runtime/server/${{ steps.version-selector.outputs.server_version }}/*.log
          retention-days: 14
      - name: Archive PDS log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sechub-pds.log
          path: ./build/sechub-runtime/pds/${{ steps.version-selector.outputs.pds_version }}/*.log
          retention-days: 14
      

